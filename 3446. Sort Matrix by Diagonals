class Solution {
public:
    vector<vector<int>> sortMatrix(vector<vector<int>>& grid) {
        int n = grid.size();
        vector<vector<bool>> vis(n, vector<bool>(n, false));
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                if(!vis[i][j]){
                    bool nonInc = false;
                    if(j == 0){
                        nonInc = true;
                    }
                    vector<int> diag;
                    int x = i;
                    int y = j;
                    while(x < n && y < n){
                        vis[x][y] = true;
                        
                        diag.push_back(grid[x][y]);
                        x++;
                        y++;
                    }
                    std::sort(diag.begin(), diag.end());
                    if(nonInc)
                        reverse(diag.begin(), diag.end());
                    x = i;
                    y = j;
                    int k = 0;
                    while(x < n && y < n && k < diag.size()){
                        grid[x][y] = diag[k];
                        x++;
                        y++;
                        k++;
                    
                    }
                                   
                }
            }
        }
        return grid;
    }
};
