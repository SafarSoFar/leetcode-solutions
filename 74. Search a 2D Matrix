class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m = matrix.size();
        int n = matrix[0].size();
        int start = 0;
        int end = m-1;
        int mid = 0;
        while(start <= end){
            mid = ((end-start)/2)+start;
            if(matrix[mid][n-1] == target || matrix[mid][0] == target)
                return true;

            if(matrix[mid][n-1] > target && matrix[mid][0] < target){
                break;
            }

            if(matrix[mid][n-1] < target){
                start = mid+1;
            }
            else
                end = mid-1;
        }  
        
        return binarySearchRec(matrix[mid], target, 0,n-1);           
    }

    bool binarySearchRec(vector<int> vec, int target, int start, int end){
        if(start > end)
            return false;
        int mid = (end-start)/2+start;
        if(vec[mid] == target)
            return true;
        
        if(vec[mid] > target)
            return binarySearchRec(vec, target, start, mid-1);
        else
            return binarySearchRec(vec, target, mid+1, end);
    }
};
