class Solution {
public:
    int minimumTotal(vector<vector<int>>& triangle) {
        int m = triangle.size();
        vector<vector<int>> ans;
        ans.push_back({triangle[0][0]});
        for(int i = 1; i < m; i++){
            int n = triangle[i].size();
            vector<int> vec(n, INT_MAX);
            for(int j = 0; j < n;j++){
                if(j < ans[i-1].size()){
                    vec[j] = std::min(vec[j],ans[i-1][j]+triangle[i][j]);
                }                      
                if(j-1 >=0){
                    vec[j] = std::min(vec[j],ans[i-1][j-1]+triangle[i][j]);
                }
            }
            ans.push_back(vec);
        }
        
        return *min_element(ans[m-1].begin(), ans[m-1].end());
    }
};
