/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* doubleIt(ListNode* head) {
        stack<ListNode*> st;
        ListNode* cur = head;
        while(cur){
            st.push(cur);
            cur = cur->next;
        }
        int carry = 0;
        while(st.size()){
            ListNode* nd = st.top();
            st.pop();
            nd->val = nd->val * 2 + carry;
            carry = nd->val / 10;
            nd->val %= 10;
        }
        if(carry){
            ListNode* nHead = new ListNode(1, head);
            return nHead;
        }
        return head;
    }
};
