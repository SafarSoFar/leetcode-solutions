class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int> indegree(numCourses);
        unordered_map<int,vector<int>> adjMp;
        queue<int> q;
        vector<int> ans;
        for(int i = 0; i < prerequisites.size(); i++){
            int v0 = prerequisites[i][0];
            int v1 = prerequisites[i][1];
            adjMp[v1].push_back(v0);
            indegree[v0]++;
        }
        for(int i = 0; i < numCourses; i++){
            if(indegree[i] == 0){              
                q.push(i);
            }
        }
        while(q.size() > 0){
            int cur = q.front();
            q.pop();
            ans.push_back(cur);
            for(auto& adjVal : adjMp[cur]){
                indegree[adjVal]--;
                if(indegree[adjVal] == 0){
                    q.push(adjVal);
                }
            }
        }
        if(ans.size() != numCourses){
            return {};
        }
        return ans;
    }
};
